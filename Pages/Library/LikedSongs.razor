@page "/library"


@inject IStringLocalizer<Text> L
@inject SpotifyService Spotify


@if (tracks is null)
{
    <HeightMeasurementProvider OnMeasurementTaken=OnHeightMeasured Fluid>

        <CenteredLoadingIndicator @ref=loadingIndicator LoadingWhat=@L["LoadingTracks"] ShowProgress />

    </HeightMeasurementProvider>
}
else
{
    <div class="d-flex flex-column justify-content-between align-items-stretch py-4 h-100">
        <div class="px-3 library-controls">
            Show:
            <BoundInlineCheckbox Label=@L["ShowFilterRow"] @bind-Checked=@showFilterRow />
            <BoundInlineCheckbox Label=@L["ShowExplicitColumn"] @bind-Checked=@showExplicitColumn />
            <BoundInlineCheckbox Label=@L["ShowPopularityColumn"] @bind-Checked=@showPopularityColumn />
        </div>
        <div>
            <SavedTrackDataGrid Height=@datagridHeight
                                Tracks=@tracks
                                ShowFilterRow=@showFilterRow
                                ShowExplicitColumn=@showExplicitColumn
                                ShowPopularityColumn=@showPopularityColumn
                                ShowAddedAtColumn />
        </div>
    </div>
}


@code
{
    private CenteredLoadingIndicator loadingIndicator = null!;

    private IQueryable<SavedTrack>? tracks;

    private int datagridHeight = 550;

    private bool
        showFilterRow = true,
        showExplicitColumn = true,
        showPopularityColumn = false;


    protected override async Task OnInitializedAsync()
    {
        if (await Spotify.IsAuthGranted())
            tracks = (await Spotify.GetSavedTracks()).AsQueryable();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Spotify.LibraryLoadingProgress += loadingIndicator.Update;
        }
    }

    private void OnHeightMeasured(int height)
    {
        /// If an explicit height is not passed to the DxDataGrid, it will default to a ~200px scrolling area instead of filling its container
        datagridHeight = Math.Max(height - 250, 100);
    }
}
