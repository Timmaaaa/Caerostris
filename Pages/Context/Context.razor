@page "/context"


@using Caerostris.Shared.Context
@using Caerostris.Services.Spotify.Web.ViewModels


@namespace Caerostris.Pages.Context


@inject IStringLocalizer<Text> L
@inject SpotifyService Spotify


    @if (context is null)
    {
        <CenteredLoadingIndicator LoadingWhat=@L["LoadingContext"] />
    }
    else
    {
        @if (context?.Item1 is not null)
        {
            <ArtistPage ArtistProfile=@context?.Item1 />
        }
        else if (context?.Item2 is not null)
        {
            <AlbumPage CompleteAlbum=@context?.Item2 />
        }
        else if (context?.Item3 is not null)
        {
            <PlaylistPage CompletePlaylist=@context?.Item3 />
        }
        else
        {
            <CenteredInfo Text=@L["CantDisplayContext"] />
        }
    }


@code
{
    private (ArtistProfile?, CompleteAlbum?, CompletePlaylist?)? context;

    protected override async Task OnInitializedAsync()
    {
        Spotify.ContextChanged += OnContextChanged;
        await OnContextChanged(await Spotify.GetPlayback());
    }

    private async Task OnContextChanged(PlaybackContext? playback)
    {
        await InvokeAsync(async () =>
        {
            if (playback is not null)
            {
                context = null;
                StateHasChanged();
                context = await Spotify.GetContext(playback.Context);
                StateHasChanged();
            }
        });
    }
}
