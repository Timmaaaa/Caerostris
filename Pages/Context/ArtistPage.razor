@inject SpotifyService Spotify


<div class="d-flex flex-column justify-content-start overflow-auto h-100 p-4">

    <ContextPageHeading Type="ARTIST"
                        Title=@(ArtistProfile.Artist.Name)
                        ImageUri=@ArtistProfile.Artist.Images.OrderBy(i => i.Height).LastOrDefault()?.Url>

        <p>@ArtistProfile.Artist.Followers.Total.ThousandsSeparator() followers @WithSeparatorPrefixIfNotEmpty(ArtistProfile.Artist.GetGenres())</p>

        <PrimaryIconButton Icon="play_arrow" OnClick=@(() => Spotify.PlayTrack(contextUri: ArtistProfile.Artist.Uri, trackUri: null)) />

    </ContextPageHeading>


    <SubsectionTitle Title="Popular tracks" />

    <DxDataGrid CssClass="datagrid p-4"
                DataRowCssClass="datagrid-row"
                DataNavigationMode=@DataGridNavigationMode.ShowAllDataRows
                ShowFilterRow=false
                SelectionMode=@DataGridSelectionMode.None
                AllowColumnDragDrop=false
                AllowSort=true
                Data=@ArtistProfile.TopTracks>

        <DxDataGridColumn Field=@nameof(FullTrack.Name) Caption="Title" Width="150px">
            <DisplayTemplate>
                <ActionText Text=@((context as FullTrack).Name)
                            OnClick=@(() => PlayTopTracks((context as FullTrack).Uri)) />
                @if ((context as FullTrack).Artists.Count() > 1)
                {
                    <span class="collab-with pl-1">— with</span>
                    @((MarkupString)((context as FullTrack).Artists.Where(a => !a.Uri.Equals(ArtistProfile.Artist.Uri)).GetArtists(link: true, localUrl: Spotify.ExploreArtistUrl)))
                }
                </DisplayTemplate>
        </DxDataGridColumn>

        <DxDataGridColumn Field=@($"{nameof(FullTrack.Album)}.{nameof(SimpleAlbum.Name)}") Caption="Album" Width="150px">
            <DisplayTemplate>
                @((MarkupString)((context as FullTrack).Album.GetName(link: true, localUrl: Spotify.ExploreAlbumUrl)))
            </DisplayTemplate>
        </DxDataGridColumn>

        <DxDataGridColumn Field=@nameof(FullTrack.Popularity) Caption="Popularity" Width="70px" />

        <DxDataGridColumn Field=@nameof(FullTrack.DurationMs) Caption="Length" Width="50px">
            <DisplayTemplate>
                @((context as FullTrack).HumanReadableDuration())
            </DisplayTemplate>
        </DxDataGridColumn>

    </DxDataGrid>


    <SubsectionTitle Title="Albums" />

    <CardTileLayout>

        @foreach (var album in ArtistProfile.Albums)
        {
            <AlbumCard Album=@album />
        }

    </CardTileLayout>


    <SubsectionTitle Title="Fans also like" />

    <CardTileLayout>

        @foreach (var artist in ArtistProfile.RelatedArtists)
        {
            <ArtistCard Artist=@artist />
        }

    </CardTileLayout>

</div>


@code
{
    [Parameter]
    public ArtistProfile ArtistProfile { get; set; }

    private async Task PlayTopTracks(string first)
    {
        var uris = new List<string>();
        uris.Add(first);
        uris.AddRange(ArtistProfile.TopTracks.Select(t => t.Uri).Where(u => !u.Equals(first)));

        await Spotify.PlayTracks(uris);
    }

    private string WithSeparatorPrefixIfNotEmpty(string? str) => string.IsNullOrEmpty(str) ? string.Empty : $"• {str}";
}