@page "/"

@inject SpotifyService Spotify



<div class="d-flex flex-column h-100 playback-main">
    <div>
        <p class="p-3">Playback state for: @(username ?? "Loading...")</p>
    </div>
    <div class="playback-cover-image-container">
        @if (!(coverImage is null))
        {
            <img class="playback-cover-image" src="@coverImage" style="height: 65vh; width: auto;"/>
        }
    </div>
    <PlaybackBar />
</div>


@code
{
    private string? username;
    private string? coverImage;

    protected async override Task OnInitializedAsync()
    {
        Spotify.PlaybackContextChanged += OnPlaybackContextChanged;

        Spotify.AuthStateChanged += (bool acquired) => { if (acquired) OnAuthAcquired(); };

        if (await Spotify.AuthGranted())
        {
            await FillUsername();
        }
    }

    private async void OnPlaybackContextChanged(PlaybackContext playback)
    {
        await InvokeAsync(() =>
        {
            var image = playback?.Item?.Album?.Images?.FirstOrDefault();
            coverImage = image?.Url;

            StateHasChanged();
        });
    }

    private async void OnAuthAcquired()
    {
        await InvokeAsync(async () =>
        {
            await FillUsername();
        });
    }

    private async Task FillUsername()
    {
        username = await Spotify.GetUsername();
        StateHasChanged();
    }
}
