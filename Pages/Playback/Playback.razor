@page "/"


@namespace Caerostris.Pages.Playback


@inject IStringLocalizer<Text> L
@inject SpotifyService Spotify


    <div>

        <p class="p-3 playback-status">@L["Playback", (username ?? L["LoadingEllipsis"])]</p>

    </div>

    <div class="playback-cover-image-container">

        @if (coverImage is not null)
        {
            <a href=@albumUrl>

                <img class="playback-cover-image" src="@coverImage" style="height: 65vh; width: auto;" />

            </a>
        }

    </div>


@code
{
    private string? username;
    private string? coverImage;
    private string? albumUrl;

    protected override async Task OnInitializedAsync()
    {
        Spotify.PlaybackChanged += OnPlaybackChanged;

        Spotify.AuthStateChanged += (acquired) => { if (acquired) OnAuthAcquired(); };

        if (await Spotify.IsAuthGranted())
        {
            await FillUsername();
        }
    }

    private async Task OnPlaybackChanged(PlaybackContext playback)
    {
        await InvokeAsync(() =>
        {
            var image = playback?.Item?.Album?.Images?.OrderBy((img) => -img.Height).FirstOrDefault();
            coverImage = image?.Url;
            albumUrl = $"{Spotify.ExploreAlbumUrl}{playback?.Item?.Album?.Id}";

            StateHasChanged();
        });
    }

    private async void OnAuthAcquired()
    {
        await InvokeAsync(async () =>
        {
            await FillUsername();
            StateHasChanged();
        });
    }

    private async Task FillUsername()
    {
        username ??= await Spotify.GetUsername();
    }
}
