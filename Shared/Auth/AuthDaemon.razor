@using Blazored.Modal
@using Blazored.Modal.Services

@inject IStringLocalizer<Text> L
@inject SpotifyService Spotify
@inject IModalService ModalService


@code
{
    /// <summary>
    /// The AuthDaemon component is responsible for orchestrating the user auth process.
    /// </summary>

    protected override async Task OnInitializedAsync()
    {
        Spotify.AuthStateChanged += OnAuthStateChanged;

        // The event won't fire if the user hasn't connected their account yet.
        // Check for auth state right away.
        if (!(await Spotify.IsAuthGranted()))
            OnAuthStateChanged(false);
    }

    private async void OnAuthStateChanged(bool state)
    {
        await InvokeAsync(() =>
        {
            if (!state)
                ShowModal();
            else
                CloseModal();
        });
    }

    private void ShowModal()
    {
        var options = new ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true
        };

        ModalService.Show<AuthModal>(title: L["AuthModalTitle"], options);
    }

    private void CloseModal() { /* Redirect */ }
}
