@namespace Caerostris.Shared.Context


@inject IStringLocalizer<Text> L
@inject SpotifyService Spotify


    <div class="d-flex flex-column justify-content-start h-100 p-4">

        <ContextPageHeading Type=@L["Playlist"]
                            Uri=@CompletePlaylist.Playlist.Uri
                            Title=@CompletePlaylist.Playlist.GetName(link: true)
                            By=@CompletePlaylist.Playlist.Owner.DisplayName
                            Image=@CompletePlaylist.Playlist.Images>

            <p>
                @(CompletePlaylist.Playlist.Public ? L["Public"] : L["Private"])
                • @CompletePlaylist.Playlist.Followers.Total.WithThousandsSeparator() @((CompletePlaylist.Playlist.Followers.Total == 1) ? L["Follower"] : L["Followers"])
                • @CompletePlaylist.Tracks.Count() @((CompletePlaylist.Tracks.Count() == 1) ? L["Song"] : L["Songs"]), @CompletePlaylist.HumanReadableTotalLength()
            </p>

            @if (!string.IsNullOrEmpty(CompletePlaylist.Playlist.Description))
            {
                <p class="pt-2">@((MarkupString)CompletePlaylist.Playlist.Description)</p>
            }

        </ContextPageHeading>

        <TrackGrid Tracks=@CompletePlaylist.Tracks.Select(t => t.AsTrack()).ToList()
                   ContextUri=@CompletePlaylist.Playlist.Uri
                   Search
                   Fill>

            <TitleColumn />
            <ArtistsColumn />
            <AddedAtColumn />
            <DurationColumn />

        </TrackGrid>

    </div>


@code
{
    [Parameter]
    public CompletePlaylist CompletePlaylist { get; set; } = default!;
}
