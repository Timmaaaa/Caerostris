@namespace Caerostris.Shared.Controls.PlaybackBar


@using Caerostris.Shared.Controls.Progressbar


@inject SpotifyService Spotify


<div class="d-flex flex-row justify-content-center align-items-center w-100 duration-display">

    <span class="px-3">@FormatTimeSpan(progressMs)</span>

    <Progressbar OnClick=@OnClick
                 Percent=@progressPercent />

    <span class="px-3">@FormatTimeSpan(durationMs)</span>

</div>


@code
{
    [Parameter]
    public Func<double, Task>? OnClick { get; set; }

    [CascadingParameter]
    public CurrentlyPlayingContext? PlaybackContext { get; set; }

    private TimeSpan progressMs;
    private TimeSpan durationMs;
    private double progressPercent;

    protected override void OnInitialized()
    {
        Spotify.PlaybackDisplayUpdate += UpdateDisplay;
        ResetProgress();
    }

    private async void UpdateDisplay(int newProgressMs)
    {
        await InvokeAsync(() =>
        {
            if (PlaybackContext.ValidTrackItemOrNull() is FullTrack track)
            {
                progressMs = TimeSpan.FromMilliseconds(newProgressMs);
                durationMs = TimeSpan.FromMilliseconds(track.DurationMs);
                progressPercent = ((double)newProgressMs / (double)track.DurationMs) * 100d;
            }
            else
            {
                ResetProgress();
            }

            StateHasChanged();
        });
    }

    private void ResetProgress()
    {
        progressMs = TimeSpan.FromMilliseconds(0);
        durationMs = TimeSpan.FromMilliseconds(0);
        progressPercent = 0;
    }

    private string FormatTimeSpan(TimeSpan timeSpan) =>
        $"{Math.Floor(timeSpan.TotalMinutes)}:{timeSpan.Seconds:00}";
}
