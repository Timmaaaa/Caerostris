@inject IStringLocalizer<Text> L


<div class="d-flex flex-column justify-content-center align-items-center h-100 loading-message">

    <h4>@LoadingMessage</h4>

    @if (!Uncertain)
    {
        <div class="w-25 pt-2">
            <Progressbar Percent=@((loadingTotal > 0) ? ((double)loadingDownloaded / (double)loadingTotal * 100d) : 0) />
        </div>
    }

</div>


@code 
{
    private int loadingDownloaded = 0, loadingTotal = 0;
    private bool Uncertain => !(ShowProgress && (loadingTotal > 0));
    private string LoadingMessage =>
        L["LoadingWhat", LoadingWhat] + (Uncertain ? "..." : $": {L["OutOf", loadingDownloaded, loadingTotal]}");

    [Parameter]
    public string LoadingWhat { get; set; } = null!;

    [Parameter]
    public bool ShowProgress { get; set; } = false;

    public async void Update(int downloaded, int total) =>
        await InvokeAsync(() =>
        {
            loadingDownloaded = downloaded;
            loadingTotal = total;
            StateHasChanged();
        });

}
